# Generated by Django 2.0.3 on 2018-06-03 22:27

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CostumerWalletChanges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'request submit'), (2, 'request profit'), (3, 'request failure'), (4, 'request failure profit')])),
                ('wallet', models.IntegerField(choices=[(0, 'rial'), (1, 'dollar'), (2, 'euro')])),
                ('change_time', models.DateTimeField()),
                ('deposit_before', models.FloatField()),
                ('deposit_after', models.FloatField()),
                ('rial_deposit_before_profit', models.FloatField()),
                ('rial_deposit_after_profit', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('genuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.GenUser')),
                ('rial_credit', models.FloatField(default=0)),
                ('dollar_cent_credit', models.FloatField(default=0)),
                ('euro_cent_credit', models.FloatField(default=0)),
                ('account_number', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('main.genuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerWalletCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_time', models.DateTimeField()),
                ('deposit_before', models.FloatField()),
                ('deposit_after', models.FloatField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerWalletTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.IntegerField(choices=[(0, 'rial wallet'), (1, 'dollar wallet'), (2, 'euro wallet')])),
                ('destination', models.IntegerField(choices=[(0, 'rial wallet'), (1, 'dollar wallet'), (2, 'euro wallet')])),
                ('transfer_time', models.DateTimeField()),
                ('profitÙ‹Rate', models.FloatField()),
                ('source_deposit_before', models.FloatField()),
                ('source_deposit_after', models.FloatField()),
                ('destination_deposit_before', models.FloatField()),
                ('destination_deposit_after', models.FloatField()),
                ('rial_deposit_before_profit', models.FloatField()),
                ('rial_deposit_after_profit', models.FloatField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.IntegerField(choices=[(0, 'rial'), (1, 'dollar'), (2, 'euro')])),
                ('amount', models.FloatField()),
                ('request_time', models.DateTimeField()),
                ('description', models.CharField(max_length=500)),
                ('status', models.IntegerField(choices=[(0, 'accepted'), (1, 'rejected'), (2, 'pending'), (3, 'failed')])),
                ('profitRate', models.FloatField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('profitRate', models.FloatField()),
                ('currency', models.IntegerField(choices=[(0, 'rial'), (1, 'dollar'), (2, 'euro')])),
            ],
        ),
        migrations.CreateModel(
            name='ForeignTrans',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('account_number', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='InternalTrans',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('account_number', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='LangTest',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='UniversityTrans',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('type', models.IntegerField(choices=[(0, 'application fee'), (1, 'deposit fee')])),
                ('university_name', models.CharField(max_length=50)),
                ('link', models.URLField()),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=50)),
                ('guide', models.CharField(max_length=1000)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='UnknownTrans',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('account_number', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.AddField(
            model_name='request',
            name='customer',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.DO_NOTHING, to='customer.Customer'),
        ),
        migrations.AddField(
            model_name='request',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_customer.request_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='costumerwalletchanges',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Request'),
        ),
        migrations.CreateModel(
            name='IBT',
            fields=[
                ('langtest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.LangTest')),
                ('test_center_name', models.CharField(max_length=100)),
                ('test_center_code', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.langtest',),
        ),
        migrations.CreateModel(
            name='GRE',
            fields=[
                ('ibt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.IBT')),
                ('major_filed_code', models.CharField(max_length=50)),
                ('major_filed_name', models.CharField(max_length=50)),
                ('citizenship', models.IntegerField(choices=[(0, 'blah'), (1, 'blah'), (2, 'blah')])),
                ('educational_status', models.IntegerField(choices=[(0, 'blah'), (1, 'blah'), (2, 'blah'), (3, 'blah'), (4, 'blah'), (5, 'blah'), (6, 'blah'), (7, 'blah')])),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.ibt',),
        ),
        migrations.CreateModel(
            name='TOEFL',
            fields=[
                ('ibt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.IBT')),
                ('reason', models.IntegerField(choices=[(0, 'blah'), (1, 'blah'), (2, 'blah'), (3, 'blah'), (4, 'blah'), (5, 'blah'), (6, 'blah'), (7, 'blah'), (8, 'blah'), (9, 'blah')])),
                ('country_for_study', models.IntegerField(choices=[(0, 'blah'), (1, 'blah'), (2, 'blah'), (3, 'blah'), (4, 'blah'), (5, 'blah'), (6, 'blah'), (7, 'blah'), (8, 'blah'), (9, 'blah')])),
                ('id_type', models.IntegerField(choices=[(0, 'Passport'), (1, 'National ID')])),
                ('id_number', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.ibt',),
        ),
    ]
