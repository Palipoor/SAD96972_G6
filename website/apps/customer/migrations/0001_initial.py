# Generated by Django 2.0.7 on 2018-08-27 09:39

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('wallet_user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Wallet_User')),
                ('contact_way', models.IntegerField(choices=[(0, 'ایمیل'), (1, 'پیامک')], default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('main.wallet_user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomTransactionType',
            fields=[
                ('type', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('profitRate_default', models.FloatField(blank=True, default=0)),
                ('status_default', models.CharField(blank=True, choices=[('0', 'accepted'), ('1', 'rejected'), ('2', 'pending'), ('3', 'failed'), ('4', 'reported')], default='2', max_length=1)),
                ('amount_exists', models.BooleanField(default=False)),
                ('amount_default', models.FloatField(blank=True, null=True)),
                ('amount_label', models.CharField(blank=True, max_length=100, null=True)),
                ('description_exists', models.BooleanField(default=False)),
                ('description_default', models.CharField(blank=True, max_length=500)),
                ('description_label', models.CharField(blank=True, max_length=100, null=True)),
                ('source_wallet_exists', models.BooleanField(default=False)),
                ('source_wallet_default', models.CharField(blank=True, choices=[('0', 'rial'), ('1', 'dollar'), ('2', 'euro')], default='0', max_length=1)),
                ('source_wallet_label', models.CharField(blank=True, max_length=100, null=True)),
                ('dest_wallet_exists', models.BooleanField(default=False)),
                ('dest_wallet_default', models.CharField(blank=True, choices=[('0', 'rial'), ('1', 'dollar'), ('2', 'euro')], default='0', max_length=1)),
                ('dest_wallet_label', models.CharField(blank=True, max_length=100, null=True)),
                ('final_wallet_exists', models.BooleanField(default=False)),
                ('final_wallet_default', models.CharField(blank=True, choices=[('0', 'rial'), ('1', 'dollar'), ('2', 'euro')], default='0', max_length=1)),
                ('final_wallet_label', models.CharField(blank=True, max_length=100, null=True)),
                ('final_user_exists', models.BooleanField(default=False)),
                ('final_user_label', models.CharField(blank=True, max_length=100, null=True)),
                ('boolean1_exists', models.BooleanField(default=False)),
                ('boolean1_default', models.NullBooleanField()),
                ('boolean1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('boolean2_exists', models.BooleanField(default=False)),
                ('boolean2_default', models.NullBooleanField()),
                ('boolean2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('boolean3_exists', models.BooleanField(default=False)),
                ('boolean3_default', models.NullBooleanField()),
                ('boolean3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('boolean4_exists', models.BooleanField(default=False)),
                ('boolean4_default', models.NullBooleanField()),
                ('boolean4_label', models.CharField(blank=True, max_length=100, null=True)),
                ('boolean5_exists', models.BooleanField(default=False)),
                ('boolean5_default', models.NullBooleanField()),
                ('boolean5_label', models.CharField(blank=True, max_length=100, null=True)),
                ('date1_exists', models.BooleanField(default=False)),
                ('date1_default', models.DateTimeField(blank=True, null=True)),
                ('date1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('date2_exists', models.BooleanField(default=False)),
                ('date2_default', models.DateTimeField(blank=True, null=True)),
                ('date2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('date3_exists', models.BooleanField(default=False)),
                ('date3_default', models.DateTimeField(blank=True, null=True)),
                ('date3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('date4_exists', models.BooleanField(default=False)),
                ('date4_default', models.DateTimeField(blank=True, null=True)),
                ('date4_label', models.CharField(blank=True, max_length=100, null=True)),
                ('email1_exists', models.BooleanField(default=False)),
                ('email1_default', models.EmailField(blank=True, max_length=254, null=True)),
                ('email1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('email2_exists', models.BooleanField(default=False)),
                ('email2_default', models.EmailField(blank=True, max_length=254, null=True)),
                ('email2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('email3_exists', models.BooleanField(default=False)),
                ('email3_default', models.EmailField(blank=True, max_length=254, null=True)),
                ('email3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('file1_exists', models.BooleanField(default=False)),
                ('file1_default', models.FileField(blank=True, null=True, upload_to='')),
                ('file1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('file2_exists', models.BooleanField(default=False)),
                ('file2_default', models.FileField(blank=True, null=True, upload_to='')),
                ('file2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('file3_exists', models.BooleanField(default=False)),
                ('file3_default', models.FileField(blank=True, null=True, upload_to='')),
                ('file3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('float1_exists', models.BooleanField(default=False)),
                ('float1_default', models.FloatField(blank=True, null=True)),
                ('float1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('float2_exists', models.BooleanField(default=False)),
                ('float2_default', models.FloatField(blank=True, null=True)),
                ('float2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('float3_exists', models.BooleanField(default=False)),
                ('float3_default', models.FloatField(blank=True, null=True)),
                ('float3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('float4_exists', models.BooleanField(default=False)),
                ('float4_default', models.FloatField(blank=True, null=True)),
                ('float4_label', models.CharField(blank=True, max_length=100, null=True)),
                ('image1_exists', models.BooleanField(default=False)),
                ('image1_default', models.ImageField(blank=True, null=True, upload_to='')),
                ('image1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('image2_exists', models.BooleanField(default=False)),
                ('image2_default', models.ImageField(blank=True, null=True, upload_to='')),
                ('image2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('int1_exists', models.BooleanField(default=False)),
                ('int1_default', models.IntegerField(blank=True, null=True)),
                ('int1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('int2_exists', models.BooleanField(default=False)),
                ('int2_default', models.IntegerField(blank=True, null=True)),
                ('int2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('int3_exists', models.BooleanField(default=False)),
                ('int3_default', models.IntegerField(blank=True, null=True)),
                ('int3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('int4_exists', models.BooleanField(default=False)),
                ('int4_default', models.IntegerField(blank=True, null=True)),
                ('int4_label', models.CharField(blank=True, max_length=100, null=True)),
                ('int5_exists', models.BooleanField(default=False)),
                ('int5_default', models.IntegerField(blank=True, null=True)),
                ('int5_label', models.CharField(blank=True, max_length=100, null=True)),
                ('long_text1_exists', models.BooleanField(default=False)),
                ('long_text1_default', models.TextField(blank=True, null=True)),
                ('long_text1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('long_text2_exists', models.BooleanField(default=False)),
                ('long_text2_default', models.TextField(blank=True, null=True)),
                ('long_text2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('long_text3_exists', models.BooleanField(default=False)),
                ('long_text3_default', models.TextField(blank=True, null=True)),
                ('long_text3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('long_text4_exists', models.BooleanField(default=False)),
                ('long_text4_default', models.TextField(blank=True, null=True)),
                ('long_text4_label', models.CharField(blank=True, max_length=100, null=True)),
                ('long_text5_exists', models.BooleanField(default=False)),
                ('long_text5_default', models.TextField(blank=True, null=True)),
                ('long_text5_label', models.CharField(blank=True, max_length=100, null=True)),
                ('request1_exists', models.BooleanField(default=False)),
                ('request1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('request2_exists', models.BooleanField(default=False)),
                ('request2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text1_exists', models.BooleanField(default=False)),
                ('short_text1_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text2_exists', models.BooleanField(default=False)),
                ('short_text2_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text3_exists', models.BooleanField(default=False)),
                ('short_text3_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text3_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text4_exists', models.BooleanField(default=False)),
                ('short_text4_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text4_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text5_exists', models.BooleanField(default=False)),
                ('short_text5_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text5_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text6_exists', models.BooleanField(default=False)),
                ('short_text6_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text6_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text7_exists', models.BooleanField(default=False)),
                ('short_text7_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text7_label', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text8_exists', models.BooleanField(default=False)),
                ('short_text8_default', models.CharField(blank=True, max_length=100, null=True)),
                ('short_text8_label', models.CharField(blank=True, max_length=100, null=True)),
                ('url1_exists', models.BooleanField(default=False)),
                ('url1_default', models.URLField(blank=True, null=True)),
                ('url1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('url2_exists', models.BooleanField(default=False)),
                ('url2_default', models.URLField(blank=True, null=True)),
                ('url2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('user1_exists', models.BooleanField(default=False)),
                ('user1_label', models.CharField(blank=True, max_length=100, null=True)),
                ('user2_exists', models.BooleanField(default=False)),
                ('user2_label', models.CharField(blank=True, max_length=100, null=True)),
                ('final_user_default', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='default_final_user', to='main.Wallet_User')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_wallet', models.CharField(blank=True, choices=[('0', 'rial'), ('1', 'dollar'), ('2', 'euro')], default='0', max_length=1)),
                ('dest_wallet', models.CharField(blank=True, choices=[('0', 'rial'), ('1', 'dollar'), ('2', 'euro')], default='0', max_length=1)),
                ('final_wallet', models.CharField(blank=True, choices=[('0', 'rial'), ('1', 'dollar'), ('2', 'euro')], default='0', max_length=1)),
                ('amount', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)])),
                ('request_time', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(blank=True, choices=[('0', 'accepted'), ('1', 'rejected'), ('2', 'pending'), ('3', 'failed'), ('4', 'reported')], default='2', max_length=1)),
                ('profitRate', models.FloatField(blank=True, default=0)),
                ('exchange_rate', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Account_Request',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='BankTrans',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('account_number', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='CustomTransactionInstance',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('email1', models.EmailField(max_length=254, null=True)),
                ('email2', models.EmailField(max_length=254, null=True)),
                ('email3', models.EmailField(max_length=254, null=True)),
                ('short_text1', models.CharField(max_length=100, null=True)),
                ('short_text2', models.CharField(max_length=100, null=True)),
                ('short_text3', models.CharField(max_length=100, null=True)),
                ('short_text4', models.CharField(max_length=100, null=True)),
                ('short_text5', models.CharField(max_length=100, null=True)),
                ('short_text6', models.CharField(max_length=100, null=True)),
                ('short_text7', models.CharField(max_length=100, null=True)),
                ('short_text8', models.CharField(max_length=100, null=True)),
                ('long_text1', models.TextField(null=True)),
                ('long_text2', models.TextField(null=True)),
                ('long_text3', models.TextField(null=True)),
                ('long_text4', models.TextField(null=True)),
                ('long_text5', models.TextField(null=True)),
                ('int1', models.IntegerField(null=True)),
                ('int2', models.IntegerField(null=True)),
                ('int3', models.IntegerField(null=True)),
                ('int4', models.IntegerField(null=True)),
                ('int5', models.IntegerField(null=True)),
                ('date1', models.DateTimeField(null=True)),
                ('date2', models.DateTimeField(null=True)),
                ('date3', models.DateTimeField(null=True)),
                ('date4', models.DateTimeField(null=True)),
                ('float1', models.FloatField(null=True)),
                ('float2', models.FloatField(null=True)),
                ('float3', models.FloatField(null=True)),
                ('float4', models.FloatField(null=True)),
                ('boolean1', models.NullBooleanField()),
                ('boolean2', models.NullBooleanField()),
                ('boolean3', models.NullBooleanField()),
                ('boolean4', models.NullBooleanField()),
                ('boolean5', models.NullBooleanField()),
                ('file1', models.FileField(null=True, upload_to='')),
                ('file2', models.FileField(null=True, upload_to='')),
                ('file3', models.FileField(null=True, upload_to='')),
                ('image1', models.ImageField(null=True, upload_to='')),
                ('image2', models.ImageField(null=True, upload_to='')),
                ('url1', models.URLField(null=True)),
                ('url2', models.URLField(null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='InternalTrans',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
                ('account_number', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='Redirect_Request',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='Reverse_Fee',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.CreateModel(
            name='Reverse_Request',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Request')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.request',),
        ),
        migrations.AddField(
            model_name='request',
            name='creator',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator', to='main.Wallet_User'),
        ),
        migrations.AddField(
            model_name='request',
            name='dest_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dest_user', to='main.Wallet_User'),
        ),
        migrations.AddField(
            model_name='request',
            name='final_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='final_user', to='main.Wallet_User'),
        ),
        migrations.AddField(
            model_name='request',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_customer.request_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='request',
            name='source_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='source_user', to='main.Wallet_User'),
        ),
        migrations.AddField(
            model_name='customtransactiontype',
            name='request1_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='default_first_request', to='customer.Request'),
        ),
        migrations.AddField(
            model_name='customtransactiontype',
            name='request2_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='default_second_request', to='customer.Request'),
        ),
        migrations.AddField(
            model_name='customtransactiontype',
            name='user1_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='default_first_user', to='customer.Customer'),
        ),
        migrations.AddField(
            model_name='customtransactiontype',
            name='user2_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='default_second_user', to='customer.Customer'),
        ),
        migrations.CreateModel(
            name='IBT',
            fields=[
                ('account_request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Account_Request')),
                ('test_center_name', models.CharField(max_length=100)),
                ('test_center_code', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.account_request',),
        ),
        migrations.CreateModel(
            name='UniversityTrans',
            fields=[
                ('account_request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.Account_Request')),
                ('university_transـtype', models.CharField(choices=[('0', 'application fee'), ('1', 'deposit fee')], max_length=1)),
                ('university_name', models.CharField(max_length=50)),
                ('link', models.URLField()),
                ('guide', models.TextField(max_length=1000)),
                ('other_details', models.TextField(max_length=1000)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.account_request',),
        ),
        migrations.CreateModel(
            name='UnknownTrans',
            fields=[
                ('banktrans_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.BankTrans')),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.banktrans',),
        ),
        migrations.AddField(
            model_name='reverse_request',
            name='reference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_request_reverse', to='customer.Request', unique=True),
        ),
        migrations.AddField(
            model_name='reverse_fee',
            name='reference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_fee_request_reverse', to='customer.Request', unique=True),
        ),
        migrations.AddField(
            model_name='redirect_request',
            name='reference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_request_redirect', to='customer.Request', unique=True),
        ),
        migrations.AddField(
            model_name='customtransactioninstance',
            name='request1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='first_request', to='customer.Request'),
        ),
        migrations.AddField(
            model_name='customtransactioninstance',
            name='request2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='second_request', to='customer.Request'),
        ),
        migrations.AddField(
            model_name='customtransactioninstance',
            name='user1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='first_user', to='customer.Customer'),
        ),
        migrations.AddField(
            model_name='customtransactioninstance',
            name='user2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='second_user', to='customer.Customer'),
        ),
        migrations.CreateModel(
            name='GRE',
            fields=[
                ('ibt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.IBT')),
                ('major_filed_code', models.CharField(max_length=50)),
                ('major_filed_name', models.CharField(max_length=50)),
                ('citizenship', models.CharField(choices=[('0', 'blah'), ('1', 'blah'), ('2', 'blah')], max_length=1)),
                ('educational_status', models.CharField(choices=[('0', 'سال دوم کارشناسی'), ('1', 'سال سوم کارشناسی'), ('2', 'سال چهارم و یا آخر کارشناسی'), ('3', 'سال اول تحصیلات تکمیلی'), ('4', 'سال دوم تحصیلات تکمیلی'), ('5', 'فارغ التحصیل تحصیلات تکمیلی'), ('6', 'فارغ التحصیل کارشناسی'), ('7', 'دیگر')], max_length=1)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.ibt',),
        ),
        migrations.CreateModel(
            name='TOFEL',
            fields=[
                ('ibt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='customer.IBT')),
                ('reason', models.TextField()),
                ('country_for_study', models.TextField()),
                ('id_type', models.CharField(choices=[('0', 'پاسپورت'), ('1', 'کارت ملی')], max_length=1)),
                ('id_number', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('customer.ibt',),
        ),
    ]
